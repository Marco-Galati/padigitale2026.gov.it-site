{"version":3,"file":"component---src-pages-ricevi-aggiornamenti-jsx-dae77dc857170eb9c54a.js","mappings":"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","sources":["webpack://padigitale2026/./src/components/Breadcrumb.jsx","webpack://padigitale2026/./src/layouts/UpdatesPage.jsx","webpack://padigitale2026/./src/pages/ricevi-aggiornamenti.jsx"],"sourcesContent":["import React from 'react';\nimport { Link } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport { createUseStyles } from 'react-jss';\nimport labels from '../../contents/labels.yml';\n\nconst useStyles = createUseStyles({\n  breadcrumb: {\n    padding: '1.563rem 0 0',\n    '& .breadcrumb': {\n      padding: '0.75rem 0',\n      '& .breadcrumb-item.active': {\n        pointerEvents: 'none',\n        cursor: 'default',\n      },\n    },\n    '& .breadcrumb-item a': {\n      fontWeight: '600',\n      fontSize: '18px',\n      '&.active': {\n        fontWeight: '400',\n        fontSize: '18px',\n        color: '#656566',\n      },\n    },\n  },\n});\n\nexport const Breadcrumb = ({ currentPage, noContainer }) => {\n  const classes = useStyles();\n  return (\n    <div className={`container ${noContainer ? 'px-0' : 'px-3'}`}>\n      <div className=\"row\">\n        <div className=\"col-12\">\n          <nav aria-label={labels.ariaLabel.breadcrumb} className={`${classes.breadcrumb} breadcrumb-container`}>\n            <ol className=\"breadcrumb justify-content-sm-start\">\n              <li className=\"breadcrumb-item d-sm-block\">\n                <Link to=\"/\">Home</Link>\n                <span aria-hidden=\"true\" className=\"separator\">\n                  /\n                </span>\n              </li>\n              <li aria-current=\"page\" className=\"breadcrumb-item active\">\n                <a>{currentPage}</a>\n              </li>\n            </ol>\n          </nav>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nBreadcrumb.propTypes = {\n  currentPage: PropTypes.string.isRequired,\n  noContainer: PropTypes.bool,\n};\n","/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable sonarjs/no-identical-functions */\n/* eslint-disable react/no-unescaped-entities */\n/* eslint-disable max-lines-per-function */\n/* eslint-disable sonarjs/cognitive-complexity */\nimport React, { useState, useEffect } from 'react';\nimport { useForm, Controller } from 'react-hook-form';\nimport { createUseStyles } from 'react-jss';\nimport { Row, Col, Button, Input } from 'design-react-kit';\nimport Select from 'react-select';\nimport { announce } from '@react-aria/live-announcer';\nimport { graphql, useStaticQuery } from 'gatsby';\nimport seo from '../../contents/seo.yml';\nimport { SEO } from '../components/SEO';\nimport content from '../../contents/opportunity-page/opportunity.yml';\nimport links from '../../contents/links.yml';\nimport notificationsLabel from '../../contents/notifications.yml';\nimport { Breadcrumb } from '../components/Breadcrumb';\n\nconst { success: successLabels, error: errorLabels, errorAddress: errorAddressLabel } = notificationsLabel;\nconst { title: seoTitle, description: seoDescription } = seo.supportPage;\nconst { privacy } = links.internalLinks;\n\nconst useStyles = createUseStyles({\n  modalUpdatesContainer: {\n    '&.modal-dialog': {\n      maxWidth: '90%',\n      '@media (max-width: 991px)': {\n        maxWidth: '100%',\n        margin: '0',\n      },\n    },\n    '&.modal-dialog .modal-content .modal-header': {\n      padding: '0',\n      marginBottom: '0.444rem',\n    },\n    '&.modal-dialog .modal-content .modal-body': {\n      padding: '0',\n      marginTop: '2.667rem',\n    },\n    '& .modal-content': {\n      padding: '4.444rem 5.556rem',\n      '@media (max-width: 991px)': {\n        padding: '3.778rem 0.833rem 4.444rem',\n      },\n    },\n    '&.modal-dialog .modal-content .modal-header .modal-title': {\n      fontSize: '1.333rem',\n      fontWeight: '700',\n      color: '#33485C',\n      maxWidth: '70%',\n      '@media (max-width: 991px)': {\n        maxWidth: '100%',\n      },\n    },\n  },\n  close: {\n    '@media (max-width: 991px)': {\n      position: 'absolute',\n      top: '0.556rem',\n      right: '-0.5rem',\n    },\n    '&:focus': {\n      outline: '2px solid #ff9900',\n      boxShadow: 'none',\n    },\n    '&.btn': {\n      background: 'none',\n      boxShadow: 'none',\n    },\n    '&.btn:hover': {\n      background: 'none',\n    },\n    '&.btn.btn-secondary:active': {\n      background: 'none',\n      boxShadow: 'none',\n    },\n    '&.btn span': {\n      fontSize: '0.778rem',\n      color: '#0066CC',\n      fontWeight: '600',\n      marginRight: '1.333rem',\n      '@media (max-width: 991px)': {\n        fontSize: '0.875rem',\n      },\n    },\n  },\n  formBody: {\n    padding: '0',\n    marginBottom: '50px',\n    '& p': {\n      fontSize: '0.889rem',\n      color: '#33485C',\n      fontWeight: '400',\n    },\n    '& [class$=\"-control\"]': {\n      border: 'none',\n      borderBottom: '2px solid #5c6f82',\n      borderRadius: '0',\n      boxShadow: 'none',\n      height: '45px',\n    },\n    '& [class$=\"-ValueContainer\"]': {\n      height: '45px',\n      paddingLeft: '1.333rem',\n      fontSize: '0.889rem',\n      color: '#808080',\n    },\n    '& [class$=\"-Input\"]': {\n      height: '45px',\n      margin: '2px 0',\n    },\n    '& [class$=\"-placeholder\"]': {\n      color: '#767676',\n    },\n    '& [class$=\"-indicatorSeparator\"]': {\n      display: 'none',\n    },\n    '& [class$=\"-menu\"]': {\n      margin: '0',\n      border: 'none',\n      boxShadow: '0px 0px 80px rgba(0, 43, 85, 0.1)',\n      borderTopLeftRadius: '0',\n      borderTopRightRadius: '0',\n      borderBottomLeftRadius: '4px',\n      borderBottomRightRadius: '4px',\n    },\n    '& [class$=\"-MenuList\"]': {\n      padding: '0',\n\n      '& [class$=\"-option\"]': {\n        fontSize: '0.889rem',\n        color: '#0066CC',\n        background: '#fff',\n      },\n    },\n    '& [class$=\"-indicatorContainer\"] svg': {\n      fill: '#33485C',\n    },\n    '& [class$=\"-singleValue\"]': {\n      fontSize: '0.889rem',\n      fontWeight: '700',\n      color: '#000',\n    },\n    '& .select.is-invalid [class$=\"-control\"]': {\n      borderColor: '#F83E5A',\n    },\n    '& .select.focused': {\n      borderColor: '#f90',\n      boxShadow: '0 0 0 2px #f90',\n      outline: '0',\n    },\n    '& .css-1n7v3ny-option': {\n      textDecoration: 'underline',\n    },\n    '& .form-check': {\n      borderBottom: '1px solid #e6e6e6',\n      padding: '1.111rem 0.444rem',\n    },\n    '& .form-check .form-check-label': {\n      fontSize: '0.889rem',\n      fontWeight: '600',\n      color: '#17324D',\n    },\n    '& .form-group': {\n      margin: '0',\n    },\n    '& .form-group input[type=\"text\"]': {\n      paddingLeft: '1.333rem',\n      fontSize: '0.889rem',\n      '&:focus': {\n        border: '2px solid #f90',\n        boxShadow: '0 0 0 2px #f90',\n        outline: '0',\n      },\n    },\n    '& .form-group input[type=\"text\"].is-invalid': {\n      borderBottom: 'solid 2px #F83E5A',\n    },\n    '& .invalid-feedback': {\n      color: '#F83E5A !important',\n    },\n  },\n  enteContainer: {\n    '&.hidden': {\n      display: 'none',\n    },\n  },\n  errorLabel: {\n    fontSize: '0.778rem',\n    color: '#F83E5A',\n    padding: '0 0.444rem',\n    fontWeight: '400',\n  },\n  selectLabel: {\n    fontSize: '0.778rem',\n    fontWeight: '600',\n    color: '#33485C',\n    paddingLeft: '9px',\n    marginBottom: '0',\n  },\n  notification: {\n    composes: 'notification with-icon dismissable',\n    zIndex: '9999',\n    display: 'block',\n    opacity: '0',\n    visibility: 'hidden',\n    transition: '.3s ease',\n    bottom: 'unset',\n    top: '16px',\n    left: '50%',\n    transform: 'translateX(-50%)',\n    '&.show': {\n      opacity: '1',\n      visibility: 'visible',\n      transition: '.3s ease',\n    },\n    '&.with-icon.success': {\n      borderColor: '#00CF86',\n    },\n  },\n  formFooterLabel: {\n    composes: 'mb-3',\n    fontSize: '0.889rem',\n  },\n  spinner: {\n    composes: 'spinner hidden ml-3',\n    maxHeight: '2.667rem',\n    '&.hidden': {\n      display: 'none',\n    },\n  },\n  titleUpdate: {\n    fontSize: '2.5rem',\n    fontWeight: '700',\n    color: '#33485C',\n    lineHeight: '48px',\n    marginBottom: '30px',\n    '@media (max-width: 991px)': {\n      fontSize: '2.25rem',\n    },\n    '@media (max-width: 767px)': {\n      textAlign: 'center',\n    },\n  },\n  subtitleUpdate: {\n    fontSize: '24px',\n    color: '#33485C',\n    lineHeight: '1.5',\n    '@media (max-width: 991px)': {\n      fontSize: '1.25rem',\n    },\n    '@media (max-width: 767px)': {\n      textAlign: 'center',\n    },\n  },\n  submitContainer: {\n    marginBottom: '12.5rem',\n    '@media (max-width: 991px)': {\n      marginBottom: '6rem',\n    },\n  },\n  heroImg: {\n    '@media (max-width: 991px)': {\n      width: '80%',\n    },\n  },\n  mandatory: {\n    fontSize: '1rem',\n    marginTop: '6.25rem',\n    '@media (min-width: 991px)': {\n      marginTop: '6.25rem',\n    },\n  },\n});\n\nconst query = graphql`\n  query {\n    site {\n      siteMetadata {\n        apiUrl\n      }\n    }\n  }\n`;\n\nexport const UpdatesPage = () => {\n  const [inasmuchValue, setInasmuchValue] = useState(false);\n  const [inputValue, setInputValue] = useState('');\n  const [enteState, setEnteState] = useState('');\n  const [formValidate, setFormValidate] = useState(false);\n  const publicAdministrationValue = 'public-administration';\n\n  const {\n    site: {\n      siteMetadata: { apiUrl },\n    },\n  } = useStaticQuery(query);\n\n  const {\n    control,\n    handleSubmit,\n    formState: { errors },\n    reset,\n  } = useForm();\n\n  const classes = useStyles();\n\n  const setListenersToSelectOptions = () => {\n    const representSelectOptions = document.querySelector('#represent-select');\n    const config = { childList: true, subtree: true };\n    const setObserver = (mutationsList) => {\n      for (const mutation of mutationsList) {\n        if (mutation.type === 'childList') {\n          let value = representSelectOptions.querySelector('div[class*=\"singleValue\"]');\n          value ? (value = value.innerHTML) : (value = '');\n          let valueSelected = selectRepresent.find((valueObj) => {\n            if (value === valueObj.label) {\n              return valueObj;\n            }\n          });\n          valueSelected = valueSelected?.value;\n          setEnteState(valueSelected);\n        }\n      }\n    };\n    const observer = new MutationObserver(setObserver);\n    observer.observe(representSelectOptions, config);\n  };\n\n  const setFocusStyleOnSelect = () => {\n    const selectInputArr = document.querySelectorAll('#updates-form .select input');\n    selectInputArr.forEach((input) => {\n      const selectFocusHandler = () => {\n        const currentSelect = input.closest('.select');\n        currentSelect.classList.add('focused');\n      };\n      const selectFocusOutHandler = () => {\n        const currentSelect = input.closest('.select');\n        currentSelect.classList.remove('focused');\n      };\n      input.addEventListener('focus', selectFocusHandler);\n      input.addEventListener('focusout', selectFocusOutHandler);\n    });\n  };\n\n  const onSubmit = async (data) => {\n    console.log(data);\n    Object.keys(data).map(function (key) {\n      if (data[key] === undefined) {\n        delete data[key];\n      }\n      if (key === 'enteSelect' || key === 'representative' || key === 'messageSelect') {\n        data[key] = data[key]?.value;\n      }\n    });\n\n    const spinner = document.querySelector('.spinner');\n    spinner.classList.remove('hidden');\n\n    const notificationElement = document.querySelector('.notification');\n    const titleElement = notificationElement.querySelector('h5');\n    const descriptionElement = notificationElement.querySelector('p');\n\n    const closeNotification = notificationElement.querySelector('.notification-close');\n\n    const closeNotificationHandler = (event) => {\n      event.target.closest('.notification').classList.remove('show');\n      closeNotification.removeEventListener('click', closeNotificationHandler);\n    };\n    closeNotification.addEventListener('click', closeNotificationHandler);\n\n    fetch(`${apiUrl}/users`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(data),\n    })\n      .then(async (response) => {\n        const data = await response.json();\n        const status = response.status;\n        setTimeout(() => {\n          if (status >= 200 && status <= 299) {\n            notificationElement.classList.add('show');\n            notificationElement.classList.add('success');\n\n            titleElement.innerHTML = `${successLabels.icon} ${successLabels.title}`;\n            descriptionElement.innerHTML = successLabels.description;\n            announce('Inviato con successo');\n            reset(data);\n            setTimeout(() => {\n              notificationElement.classList.remove('show');\n            }, 5000);\n          } else {\n            notificationElement.classList.add('show');\n            notificationElement.classList.add('error');\n            announce(\"Errore nell'invio\");\n            if (data.message.includes('already exists')) {\n              titleElement.innerHTML = `${errorLabels.icon} ${errorAddressLabel.title}`;\n              descriptionElement.innerHTML = errorAddressLabel.description;\n            } else {\n              titleElement.innerHTML = `${errorLabels.icon} ${errorLabels.title}`;\n              descriptionElement.innerHTML = errorLabels.description;\n            }\n          }\n        }, 500);\n      })\n      .catch((error) => {\n        console.log(error);\n      })\n      .then(() => {\n        spinner.classList.add('hidden');\n        announce('Invio in corso');\n      });\n  };\n\n  const onError = async (data) => {\n    console.log('error', data);\n  };\n\n  useEffect(() => {\n    announce('Pagina caricata ' + content.name);\n  }, []);\n\n  const inQuantoHandler = (e) => {\n    setInasmuchValue(e.value);\n  };\n\n  useEffect(() => {\n    const inputArr = document.querySelectorAll('#updates-form input[data-form=\"true\"]');\n    const visibleInputArr = Array.prototype.slice.call(inputArr).filter((input) => {\n      if (!input.closest('.hidden')) {\n        return input;\n      }\n    });\n    const isValidateInput = visibleInputArr.every((input) => {\n      if (input.value !== '') {\n        return input;\n      }\n    });\n\n    const isValidateSelectFunc = (enteState, inasmuchValue) => {\n      if (enteState || inasmuchValue) {\n        const inasmuchSelect = document.querySelector('#enteSelect');\n        const isInasmuchVisible = !inasmuchSelect.closest('.hidden');\n        if (enteState === publicAdministrationValue && inasmuchValue) {\n          return true;\n        }\n        if (enteState !== publicAdministrationValue && !inasmuchValue) {\n          return true;\n        }\n        if (enteState !== publicAdministrationValue && inasmuchValue && !isInasmuchVisible) {\n          return true;\n        }\n      }\n      return false;\n    };\n    const isValidateSelect = isValidateSelectFunc(enteState, inasmuchValue);\n\n    if (isValidateInput && isValidateSelect) {\n      setFormValidate(true);\n    } else {\n      setFormValidate(false);\n    }\n    setListenersToSelectOptions();\n    setFocusStyleOnSelect();\n  }, [enteState, inasmuchValue, inputValue]);\n\n  const onInputHandler = (e) => {\n    setInputValue(e.target.value);\n  };\n\n  const {\n    selectRepresent,\n    selectInQuanto,\n    mandatoryAdvise,\n    requiredLabel,\n    emailValidationLabel,\n    emailLabel,\n    representLabel,\n    selectPlaceholder,\n    enteValidationLabel,\n    enteTypeLabel,\n    enteNameLabel,\n    inQuantoLabel,\n    sendButtonLabel,\n  } = content.modal;\n  return (\n    <>\n      <SEO title={seoTitle} description={seoDescription} />\n      <Breadcrumb currentPage=\"Ricevi aggiornamenti\" />\n      <div className=\"sr-only\">\n        <h2>{content.name}</h2>\n      </div>\n      <div className=\"container mt-5 px-3\">\n        <div className={classes.formBody}>\n          <form onSubmit={handleSubmit(onSubmit, onError)} id=\"updates-form\" aria-describedby=\"mandatory-label\">\n            <fieldset>\n              <legend>\n                <Row>\n                  <Col xs={12} md={6} lg={5}>\n                    <h3 className={classes.titleUpdate}>Ricevi aggiornamenti</h3>\n                    <div className={classes.subtitleUpdate}>\n                      Ricevi materiali e informazioni sulle novità e gli avvisi di Italia digitale 2026.\n                    </div>\n                  </Col>\n                  <Col\n                    xs={12}\n                    md={6}\n                    lg={3}\n                    className=\"offset-lg-2 d-flex justify-content-center justify-content-sm-end justify-content-lg-center mt-5 mt-md-0\"\n                  >\n                    <img src={`/assets/updates-icon.svg`} className={classes.heroImg} alt=\"\" />\n                  </Col>\n                </Row>\n              </legend>\n              <Row>\n                <Col xs={12}>\n                  <div\n                    className={classes.mandatory}\n                    id=\"mandatory-label\"\n                    dangerouslySetInnerHTML={{ __html: mandatoryAdvise }}\n                  ></div>\n                </Col>\n              </Row>\n              <Row className=\"mt-5\">\n                <Col xs={12} lg={4} className=\"d-lg-flex flex-lg-column justify-content-end\">\n                  <Controller\n                    name=\"address\"\n                    control={control}\n                    rules={{\n                      required: requiredLabel,\n                      pattern: {\n                        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                        message: emailValidationLabel,\n                      },\n                    }}\n                    render={({ field }) => (\n                      <>\n                        <Input\n                          invalid={errors.address}\n                          aria-invalid={errors.address && 'true'}\n                          label={emailLabel}\n                          aria-describedby=\"mandatory-label\"\n                          aria-labelledby={errors.address && 'error-address'}\n                          type=\"text\"\n                          id=\"address\"\n                          aria-required=\"true\"\n                          data-form=\"true\"\n                          onInput={onInputHandler}\n                          autoComplete=\"email\"\n                          {...field}\n                          className=\"mb-0\"\n                        />\n                        <span className={classes.errorLabel} id=\"error-address\">\n                          {errors.address && errors.address.message}\n                        </span>\n                      </>\n                    )}\n                  />\n                </Col>\n                <Col xs={12} lg={4} className=\"offset-lg-1 mt-4 mt-lg-0\">\n                  <label htmlFor=\"represent-select-input\" className={classes.selectLabel}>\n                    {representLabel}\n                  </label>\n                  <Controller\n                    control={control}\n                    name=\"representative\"\n                    rules={{ required: true }}\n                    render={({ field: { onChange, value } }) => (\n                      <Select\n                        value={value}\n                        id=\"represent-select\"\n                        inputId=\"represent-select-input\"\n                        onChange={onChange}\n                        options={selectRepresent}\n                        placeholder={selectPlaceholder}\n                        aria-label={selectPlaceholder}\n                        aria-describedby=\"mandatory-label\"\n                        aria-invalid={errors.representative && 'true'}\n                        aria-labelledby={errors.representative && 'error-represent'}\n                        className={`select ${errors.representative && ' is-invalid'}`}\n                      />\n                    )}\n                  />\n                </Col>\n              </Row>\n              <span className={classes.errorLabel} id=\"error-represent\">\n                {errors.represent ? requiredLabel : ''}\n              </span>\n              <div className={`${classes.enteContainer} ${enteState === 'other' ? '' : 'hidden'}`}>\n                <Row className=\"mt-5\">\n                  <Col xs={12} lg={9}>\n                    <Controller\n                      name=\"enteType\"\n                      control={control}\n                      rules={{\n                        required: {\n                          value: enteState === 'other' ? true : false,\n                          message: requiredLabel,\n                        },\n                        pattern: {\n                          value: /^\\p{L}/u,\n                          message: enteValidationLabel,\n                        },\n                      }}\n                      render={({ field }) => (\n                        <>\n                          <Input\n                            invalid={errors.enteType}\n                            label={enteTypeLabel}\n                            type=\"text\"\n                            aria-describedby=\"mandatory-label\"\n                            aria-labelledby={errors.enteType && 'error-enteType'}\n                            aria-required={enteState === 'other' ? true : ''}\n                            aria-invalid={errors.enteType && 'true'}\n                            {...field}\n                            id=\"enteType\"\n                            data-form=\"true\"\n                            onInput={onInputHandler}\n                          />\n                          <span className={classes.errorLabel} id=\"error-enteType\">\n                            {errors.enteType && errors.enteType.message}\n                          </span>\n                        </>\n                      )}\n                    />\n                  </Col>\n                </Row>\n              </div>\n              <Row className=\"mt-5\">\n                <Col xs={12} lg={9}>\n                  <Controller\n                    name=\"ente\"\n                    control={control}\n                    rules={{\n                      required: {\n                        value: true,\n                        message: requiredLabel,\n                      },\n                      pattern: {\n                        value: /^\\p{L}/u,\n                        message: enteValidationLabel,\n                      },\n                    }}\n                    render={({ field }) => (\n                      <>\n                        <Input\n                          invalid={errors.ente}\n                          label={enteNameLabel}\n                          type=\"text\"\n                          aria-describedby=\"mandatory-label\"\n                          aria-required=\"true\"\n                          aria-labelledby={errors.ente && 'error-enteName'}\n                          aria-invalid={errors.ente && 'true'}\n                          data-form=\"true\"\n                          onInput={onInputHandler}\n                          {...field}\n                          id=\"enteName\"\n                        />\n                        <span className={classes.errorLabel} id=\"error-enteName\">\n                          {errors.ente && errors.ente.message}\n                        </span>\n                      </>\n                    )}\n                  />\n                </Col>\n              </Row>\n              <div className={`${classes.enteContainer} ${enteState === publicAdministrationValue ? '' : 'hidden'}`}>\n                <Row className=\"mt-5\">\n                  <Col xs={12} lg={6}>\n                    <label htmlFor=\"enteSelect-input\" className={classes.selectLabel}>\n                      {inQuantoLabel}\n                    </label>\n                    <Controller\n                      control={control}\n                      name=\"enteSelect\"\n                      rules={{\n                        required: {\n                          value: enteState === publicAdministrationValue ? true : false,\n                          message: requiredLabel,\n                        },\n                      }}\n                      render={({ field: { onChange, value } }) => (\n                        <Select\n                          value={value}\n                          id=\"enteSelect\"\n                          inputId=\"enteSelect-input\"\n                          onChange={(e) => {\n                            inQuantoHandler(e);\n                            onChange(e);\n                          }}\n                          options={selectInQuanto}\n                          aria-describedby=\"mandatory-label\"\n                          placeholder={selectPlaceholder}\n                          aria-label={selectPlaceholder}\n                          aria-invalid={errors.enteSelect && 'true'}\n                          aria-labelledby={errors.enteSelect && 'error-enteSelect'}\n                          className={`select ${errors.enteSelect && 'select is-invalid'}`}\n                        />\n                      )}\n                    />\n                  </Col>\n                </Row>\n                <span className={classes.errorLabel} id=\"error-enteSelect\">\n                  {errors.enteSelect ? requiredLabel : ''}\n                </span>\n              </div>\n            </fieldset>\n          </form>\n        </div>\n        <p className={classes.formFooterLabel}>\n          Cliccando su INVIA dichiaro di aver letto e compreso{' '}\n          <a target=\"_blank\" href={privacy.linkTo} rel=\"noreferrer\">\n            l'informativa privacy\n          </a>\n        </p>\n        <div className={`${classes.submitContainer} d-flex mt-5`}>\n          <Button color=\"primary\" type=\"submit\" form=\"updates-form\" disabled={!formValidate ? true : false}>\n            {sendButtonLabel}\n          </Button>\n          <img className={classes.spinner} src=\"/assets/spinner.gif\" alt=\"\"></img>\n        </div>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\nimport { UpdatesPage } from '../layouts/UpdatesPage';\n\nconst Page = () => <UpdatesPage title=\"Ricevi Aggiornamenti\" />;\nexport default Page;\n"],"names":["useStyles","createUseStyles","breadcrumb","padding","pointerEvents","cursor","fontWeight","fontSize","color","Breadcrumb","currentPage","noContainer","classes","className","labels","to","successLabels","notificationsLabel","errorLabels","errorAddressLabel","seo","seoTitle","title","seoDescription","description","privacy","links","modalUpdatesContainer","maxWidth","margin","marginBottom","marginTop","close","position","top","right","outline","boxShadow","background","marginRight","formBody","border","borderBottom","borderRadius","height","paddingLeft","display","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","fill","borderColor","textDecoration","enteContainer","errorLabel","selectLabel","notification","composes","zIndex","opacity","visibility","transition","bottom","left","transform","formFooterLabel","spinner","maxHeight","titleUpdate","lineHeight","textAlign","subtitleUpdate","submitContainer","heroImg","width","mandatory","UpdatesPage","useState","inasmuchValue","setInasmuchValue","inputValue","setInputValue","enteState","setEnteState","formValidate","setFormValidate","publicAdministrationValue","apiUrl","useStaticQuery","site","siteMetadata","useForm","control","handleSubmit","errors","formState","reset","onSubmit","data","console","log","Object","keys","map","key","undefined","value","document","querySelector","classList","remove","notificationElement","titleElement","descriptionElement","closeNotification","closeNotificationHandler","event","target","closest","removeEventListener","addEventListener","fetch","method","headers","body","JSON","stringify","then","response","json","status","setTimeout","add","innerHTML","icon","announce","message","includes","catch","error","onError","useEffect","content","representSelectOptions","inputArr","querySelectorAll","isValidateInput","Array","prototype","slice","call","filter","input","every","isValidateSelect","isInasmuchVisible","isValidateSelectFunc","MutationObserver","mutationsList","type","valueSelected","selectRepresent","find","valueObj","label","observe","childList","subtree","forEach","onInputHandler","e","selectInQuanto","mandatoryAdvise","requiredLabel","emailValidationLabel","emailLabel","representLabel","selectPlaceholder","enteValidationLabel","enteTypeLabel","enteNameLabel","inQuantoLabel","sendButtonLabel","SEO","id","Row","Col","xs","md","lg","src","alt","dangerouslySetInnerHTML","__html","name","rules","required","pattern","render","field","invalid","address","onInput","autoComplete","htmlFor","onChange","inputId","options","placeholder","representative","represent","enteType","ente","inQuantoHandler","enteSelect","href","linkTo","rel","form","disabled"],"sourceRoot":""}